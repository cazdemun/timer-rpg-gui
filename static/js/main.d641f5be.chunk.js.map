{"version":3,"sources":["app/Services/supermemo2.ts","app/AlarmsPage.tsx","types/Repository.ts","app/IndexSchedulerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["supermemo2","history","a","b","c","d","theta","isArrayEmpty","length","Error","isEveryNumberInRange","reduce","acc","x","streak","historySum","daysToReview","Math","pow","max","toFixed","addDays","date","format","add","parse","Date","days","supermemoScheduleThree","label","slice","lastDate","newDate","parseInt","concat","type","content","require","flag","Repository","collection","db","this","Nedb","filename","autoload","query","Promise","resolve","reject","find","err","docs","newDoc","insert","doc","_id","update","$set","numberOfUpdated","message","remove","multi","numRemoved","Alarms","HOUR_FORMAT","DATE_FORMAT","stringToColour","str","hash","i","charCodeAt","colour","j","toString","substr","alarmsColumns","send","title","dataIndex","key","render","s","width","gutter","value","map","tag","span","color","sorter","compare","aT","bT","isEqual","isAfter","start","multiple","join","filters","text","onFilter","record","weekdays","includes","_","icon","EditOutlined","onClick","data","alarm","traceTag","DeleteOutlined","alarmId","CopyOutlined","undefined","lightMachine","createMachine","initial","context","alarms","alarmToEdit","states","loading","invoke","src","onDone","target","actions","assign","event","idle","on","creating","end","then","editing","editingService","deletingService","delete","duplicatingService","console","log","AlarmModal","current","Form","useForm","form","useState","task","taskType","setTaskType","initialValues","taskValue","moment","startDate","endDate","formItemLayout","labelCol","xs","sm","wrapperCol","formItemLayoutWithOutLabel","offset","realmsOptions","visible","matches","onOk","validateFields","values","resetFields","editedAlarm","catch","info","onCancel","name","autoComplete","Item","rules","required","Group","options","style","onChange","Option","r","List","validator","names","fields","errors","field","index","validateTrigger","noStyle","marginRight","MinusCircleOutlined","className","PlusOutlined","ErrorList","AlarmsPage","useMachine","justify","PlusSquareOutlined","dataSource","columns","success","navigator","clipboard","writeText","JSON","stringify","onFinish","split","htmlType","TextArea","height","minHeight","StudyObjects","defaultStudyObject","toc","schedulerMachine","studyObjects","currentStudyObject","SAVE_STUDY_OBJECT","studyObject","LOAD_STUDY_OBJECT","CREATE_NEW_STUDY_OBJECT","__","DELETE_STUDY_OBJECT","savingStudyObject","studyObjectId","ScheduleCalendar","getListData","calendarValue","setCalendarValue","onPanelChange","dateCellRender","listData","item","listStyle","status","StudyObjectSchedulerPage","initialDate","md","size","onRow","pagination","pageSize","titleDate","Object","keys","forEach","k","Header","Layout","Footer","Content","navMachine","alarmPage","realmPage","indexSchedulerPage","TO_ALARM_PAGE","TO_REALM_PAGE","TO_INDEX_SCHEDULER_PAGE","App","theme","mode","defaultSelectedKeys","padding","IndexSchedulerPage","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d641f5be.chunk.js","sourcesContent":["import { parse, add, format } from 'date-fns';\r\n// Variation from https://gist.github.com/doctorpangloss/13ab29abd087dc1927475e560f876797\r\n\r\nexport const supermemo2 = (history: number[], a: number = 6.0, b: number = -0.8,\r\n  c: number = 0.28, d: number = 0.02, theta: number = 0.2): string => {\r\n  const isArrayEmpty = history.length < 1;\r\n  if (isArrayEmpty) throw new Error('History must contain at least one element');\r\n  const isEveryNumberInRange = history.reduce((acc, x) => acc && (0 <= x && x <= 5), true);\r\n  if (!isEveryNumberInRange) throw new Error('Range allowed is 0 - 5');\r\n\r\n  const streak: number = history.reduce((acc, x) => x >= 3 ? acc + 1 : 0, 0);\r\n\r\n  if (streak === 0) return '1';\r\n  if (streak === 1) return '1';\r\n\r\n  const historySum = history.reduce((acc, x) => acc + (b + (c * x) + (d * x * x)), 0)\r\n  // console.log('historySum', historySum);\r\n  const daysToReview = a * Math.pow(Math.max(1.3, 2.5 + historySum), theta * streak);\r\n  // return daysToReview.toFixed(2);\r\n  return (daysToReview * 3 / 4).toFixed(2);\r\n  // return (daysToReview / 2).toFixed(2);\r\n};\r\n\r\nexport const addDays = (date: string, d: number): string => format(add(\r\n  parse(date, 'yyyy-MM-dd', new Date()), { days: d }), 'yyyy-MM-dd');\r\n\r\nexport const supermemoScheduleThree = (date: string, label: string) => {\r\n  // 'yyyy-MM-dd'\r\n  const daysToAdd: string[] = [\r\n    supermemo2([3]),\r\n    supermemo2([3, 3]),\r\n    supermemo2([3, 3, 3]),\r\n    supermemo2([3, 3, 3, 3]),\r\n    supermemo2([3, 3, 3, 3, 3]),\r\n  ];\r\n  // console.log(daysToAdd);\r\n\r\n  // const schedule = [\r\n  //   date,\r\n  //   ...daysToAdd\r\n  //     .map((d: string) => addDays(date, parseInt(d)))\r\n  // ];\r\n  // console.log(schedule);\r\n\r\n  const incrementalSchedule = daysToAdd\r\n    .reduce((acc: string[], d: string) => {\r\n      const [lastDate] = acc.slice(-1);\r\n      const newDate = addDays(lastDate, parseInt(d));\r\n      return acc.concat([newDate]);\r\n    }, [date])\r\n  // console.log(incrementalSchedule);\r\n\r\n  const incrementalScheduleObject = incrementalSchedule\r\n    .reduce((acc: any, x: string) => {\r\n      return {\r\n        ...acc,\r\n        [x]: [{ type: 'success', content: label }],\r\n      };\r\n    }, {})\r\n  // console.log(incrementalScheduleObject);\r\n  return incrementalScheduleObject;\r\n}\r\n\r\nif (require.main === module) {\r\n  // const trace = (x: any) => {\r\n  //   console.log(x);\r\n  //   return x;\r\n  // }\r\n\r\n  // const trycatchlog = (fn: Function) => {\r\n  //   try {\r\n  //     console.log(fn());\r\n  //   } catch (error) {\r\n  //     console.log('ERROR:', error.message);\r\n  //   }\r\n  // }\r\n\r\n  // // It should return 1\r\n  // trycatchlog(() => supermemo2(trace([0])));\r\n  // // It should throw error\r\n  // trycatchlog(() => supermemo2(trace([])));\r\n  // // It should throw error\r\n  // trycatchlog(() => supermemo2(trace([6])));\r\n  // trycatchlog(() => supermemo2(trace([6, 7])));\r\n  // trycatchlog(() => supermemo2(trace([6, 7, 3])));\r\n  // // It should return 1\r\n  // trycatchlog(() => supermemo2(trace([3, 1, 0])));\r\n  // trycatchlog(() => supermemo2(trace([3, 1, 0, 1, 2])));\r\n  // // It should return more than 1\r\n  // trycatchlog(() => supermemo2(trace([3, 1, 0, 1, 4, 5])));\r\n  // // It should return more than 1\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 0, 0, 0, 0])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 0, 0, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 0, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 1, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 1, 1, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([1, 1, 1, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([5, 5, 5, 5, 5, 5])));\r\n  // trycatchlog(() => supermemo2(trace([5, 5, 5, 5, 5, 5, 5])));\r\n\r\n  // trycatchlog(() => supermemo2(trace([0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([3])));\r\n}","// eslint-disable-next-line no-use-before-define\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport Repository from '../types/Repository';\nimport { Alarm, Task } from '../types/types';\nimport { isAfter, isEqual, parse } from 'date-fns';\nimport { assign, createMachine, Event, EventData, State } from 'xstate';\nimport { useMachine } from '@xstate/react';\nimport { Table, Row, Col, Button, message, Form, Layout, Modal, Checkbox, TimePicker, DatePicker, Select, Tag, Input } from 'antd';\nimport { CopyOutlined, EditOutlined, DeleteOutlined, PlusSquareOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst Alarms = new Repository<Alarm>('alarms');\n\nconst HOUR_FORMAT = 'HH:mm';\nconst DATE_FORMAT = 'yyyy-MM-DD';\n\nconst dateStringSorter = (format: string) => (a: string, b: string) => {\n  const aT = parse(a, format, new Date());\n  const bT = parse(b, format, new Date());\n  if (isEqual(aT, bT)) return 0;\n  if (isAfter(aT, bT)) return 1;\n  return -1;\n};\n\nconst stringToColour = (str: string) => {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  var colour = '#';\n  for (var j = 0; j < 3; j++) {\n    var value = (hash >> (j * 8)) & 0xFF;\n    colour += ('00' + value.toString(16)).substr(-2);\n  }\n  return colour;\n};\n\nconst alarmsColumns = (send: any) => [\n  {\n    title: 'Id',\n    dataIndex: '_id',\n    key: 'name',\n    render: (s: string) => `${s.substr(0, 5)}...`,\n    width: 50,\n  },\n  {\n    title: 'Task',\n    dataIndex: 'task',\n    key: 'task',\n    render: (s: Task) => (\n      <Row gutter={[16, 16]}>\n        {s.type === 'queue'\n          ? s.value.map((tag, i) => (\n            <Col key={i} span={6} >\n              <Tag color={stringToColour(tag)}>\n                {tag.substr(0, 7)}\n              </Tag>\n            </Col>\n          ))\n          : <Tag color={stringToColour(s.value)}>{s.value}</Tag>}\n      </Row>\n    ),\n    width: 320,\n  },\n  {\n    title: 'Start',\n    dataIndex: 'start',\n    key: 'start',\n    sorter: {\n      compare: (a: Alarm, b: Alarm) => dateStringSorter(HOUR_FORMAT)(a.start, b.start),\n      multiple: 2,\n    }\n  },\n  {\n    title: 'End',\n    dataIndex: 'end',\n    key: 'end',\n  },\n  {\n    title: 'Weekdays',\n    dataIndex: 'weekdays',\n    key: 'weekdays',\n    render: (s: string[]) => `${s.join(\",\")}`,\n    filters: [\n      { text: 'Su', value: 0 },\n      { text: 'M', value: 1 },\n      { text: 'Tu', value: 2 },\n      { text: 'W', value: 3 },\n      { text: 'Th', value: 4 },\n      { text: 'F', value: 5 },\n      { text: 'Sa', value: 6 },\n    ],\n    onFilter: (value: any, record: any) => record.weekdays.length === 0 ? true : record.weekdays.includes(value),\n  },\n  {\n    title: 'Operation',\n    dataIndex: 'operation',\n    render: (_: any, record: any) => <Row>\n      <Button icon={<EditOutlined />}\n        onClick={() => send('OPEN_EDIT_ALARM_MODAL', {\n          data: {\n            alarm: traceTag('OPEN_EDIT_ALARM_MODAL')(record)\n          }\n        })} />\n      <Button icon={<DeleteOutlined />}\n        onClick={() => send('DELETE_ALARM', {\n          data: {\n            alarmId: traceTag('DELETE_ALARM')(record._id)\n          }\n        })} />\n      <Button icon={<CopyOutlined />}\n        onClick={() => send('DUPLICATE_ALARM', {\n          data: {\n            alarm: traceTag('DUPLICATE_ALARM')({ ...record, key: undefined, _id: undefined })\n          }\n        })} />\n    </Row>,\n    width: 150,\n  }\n]\n\n// The events that the machine handles\ntype LightEvent =\n  | { type: 'CREATE_ALARM' }\n  | { type: 'OPEN_CREATE_ALARM_MODAL' }\n  | { type: 'EDIT_ALARM', data: { alarm: Alarm } }\n  | { type: 'OPEN_EDIT_ALARM_MODAL', data: { alarm: Alarm } }\n  | { type: 'DELETE_ALARM', data: { alarmId: string } }\n  | { type: 'DUPLICATE_ALARM', data: { alarm: Alarm } }\n  | { type: 'CLOSE_ALARM_MODAL' }\n\n// The context (extended state) of the machine\ninterface LightContext {\n  alarms: Alarm[];\n  alarmToEdit?: Alarm;\n}\n\nconst lightMachine = createMachine<LightContext, LightEvent>({\n  key: 'light',\n  initial: 'loading',\n  context: {\n    alarms: [],\n    alarmToEdit: undefined,\n  },\n  states: {\n    loading: {\n      invoke: {\n        src: () => Alarms.find({}),\n        onDone: {\n          target: 'idle',\n          actions: assign((_, event) => ({\n            alarms: traceTag('loading')(event.data)\n          }))\n        }\n      }\n    },\n    idle: {\n      on: {\n        'CREATE_ALARM': 'creating',\n        'DELETE_ALARM': 'deletingService',\n        'DUPLICATE_ALARM': 'duplicatingService',\n        'OPEN_EDIT_ALARM_MODAL': {\n          target: 'editing',\n          actions: assign((_, event) => ({\n            alarmToEdit: traceTag('idle')(event.data.alarm)\n          }))\n        }\n      }\n    },\n    creating: {\n      invoke: {\n        src: () => Alarms.insert({ start: '06:00', end: '07:00', value: 'test', weekdays: [] })\n          .then(traceTag('creating'))\n          .then(_ => Alarms.find({})),\n        onDone: {\n          target: 'idle',\n          actions: assign((_, event) => ({\n            alarms: traceTag('creating')(event.data)\n          }))\n        }\n      }\n    },\n    editing: {\n      on: {\n        'EDIT_ALARM': 'editingService',\n        'CLOSE_ALARM_MODAL': 'idle'\n      }\n    },\n    editingService: {\n      invoke: {\n        src: (_, event: any) => Alarms.update(event.data.alarm._id, event.data.alarm),\n        onDone: 'loading'\n      },\n    },\n    deletingService: {\n      invoke: {\n        src: (_, event: any) => Alarms.delete(event.data.alarmId),\n        onDone: 'loading'\n      },\n    },\n    duplicatingService: {\n      invoke: {\n        src: (_, event: any) => Alarms.insert(event.data.alarm)\n          .then(traceTag('creating'))\n          .then(_ => Alarms.find({})),\n        onDone: {\n          target: 'idle',\n          actions: assign((_, event) => ({\n            alarms: traceTag('creating')(event.data)\n          }))\n        }\n      },\n    },\n  }\n});\n\n// const trace = (x: any) => {console.log(x); return x; }\nconst traceTag_ = (flag: boolean) => (tag: string) => (x: any) => { if (flag) { console.log(tag, x); return x; } }\nconst traceTag = traceTag_(true);\n\ntype StateUseMachine = { current: State<LightContext, LightEvent>, send: (event: Event<LightEvent>, payload?: EventData | undefined) => State<LightContext, LightEvent> }\n\nconst AlarmModal = ({ current, send }: StateUseMachine) => {\n  const [form] = Form.useForm();\n  const [taskType, setTaskType] = useState<\"timer\" | \"queue\" | \"spotify\" | \"sound\" | \"webpage\">(current.context.alarmToEdit?.task?.type ?? 'timer');\n\n  const initialValues = traceTag('initialValues')({\n    ...current.context.alarmToEdit,\n    task: current.context.alarmToEdit?.task?.type ?? 'timer',\n    taskValue: current.context.alarmToEdit?.task?.value ?? '',\n    start: current.context.alarmToEdit?.start\n      ? moment(current.context.alarmToEdit.start, HOUR_FORMAT) : undefined,\n    end: current.context.alarmToEdit?.end\n      ? moment(current.context.alarmToEdit.end, HOUR_FORMAT) : undefined,\n    startDate: current.context.alarmToEdit?.startDate\n      ? moment(current.context.alarmToEdit.startDate, DATE_FORMAT) : undefined,\n    endDate: current.context.alarmToEdit?.endDate\n      ? moment(current.context.alarmToEdit.endDate, DATE_FORMAT) : undefined,\n  })\n\n  const onOk = () => {\n    form\n      .validateFields()\n      .then(values => {\n        form.resetFields();\n        console.log(values);\n        const editedAlarm = traceTag('validateFields')({\n          ...current.context.alarmToEdit,\n          ...values,\n          // remane values.task to values.taskType\n          task: { type: values.task, value: values.taskValue },\n          start: values.start?.format(HOUR_FORMAT) ?? undefined,\n          end: values.end?.format(HOUR_FORMAT) ?? undefined,\n          startDate: values.startDate?.format(DATE_FORMAT) ?? undefined,\n          endDate: values.endDate?.format(DATE_FORMAT) ?? undefined,\n          taskValue: undefined,\n          key: undefined,\n          // temp\n          value: undefined\n        });\n        send('EDIT_ALARM', { data: { alarm: editedAlarm } });\n      })\n      .catch(info => {\n        console.log('Validate Failed:', info);\n      });\n  }\n\n  const onCancel = () => send('CLOSE_ALARM_MODAL')\n\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 20 },\n    },\n  };\n  const formItemLayoutWithOutLabel = {\n    wrapperCol: {\n      xs: { span: 24, offset: 0 },\n      sm: { span: 20, offset: 4 },\n    },\n  };\n\n  const realmsOptions = [\n    { value: 'fitness', label: 'Exercise' },\n    { value: 'work', label: 'Work' },\n    { value: 'worklite', label: 'Work Lite' },\n    { value: 'focus', label: 'Focus' },\n    { value: 'life', label: 'Life Management' },\n    { value: 'studies', label: 'Studies' },\n    { value: 'inspiration', label: 'Inspiration' },\n    { value: 'chores', label: 'Chores' },\n    { value: 'music', label: 'Music' },\n    { value: 'salsa', label: 'Salsa time' },\n    { value: 'reggae', label: 'Regueton' },\n    { value: 'politics', label: 'Politics' },\n  ];\n\n  return (\n    <Modal\n      visible={current.matches('editing')}\n      onOk={onOk}\n      onCancel={onCancel}\n    >\n      <Form\n        name=\"basic\"\n        form={form}\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 20 }}\n        initialValues={initialValues}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Start\"\n          name=\"start\"\n          rules={[{ required: true, message: 'Please input you a start time!' }]}\n        >\n          <TimePicker />\n        </Form.Item>\n\n        <Form.Item\n          label=\"End\"\n          name=\"end\"\n        >\n          <TimePicker />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Start Date\"\n          name=\"startDate\"\n        >\n          <DatePicker />\n        </Form.Item>\n\n        <Form.Item\n          label=\"End Date\"\n          name=\"endDate\"\n        >\n          <DatePicker />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Weekdays\"\n          name=\"weekdays\"\n        >\n          <Checkbox.Group options={[\n            { value: 0, label: 'Su' },\n            { value: 1, label: 'M' },\n            { value: 2, label: 'Tu' },\n            { value: 3, label: 'W' },\n            { value: 4, label: 'Th' },\n            { value: 5, label: 'F' },\n            { value: 6, label: 'Sa' },\n          ]} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Task type\"\n          name=\"task\"\n        >\n          <Select\n            style={{ width: 150 }}\n            onChange={(value: 'timer' | 'queue') => setTaskType(value)}\n          >\n            <Select.Option value=\"timer\">Timer</Select.Option>\n            <Select.Option value=\"queue\">Queue</Select.Option>\n          </Select>\n        </Form.Item>\n\n        {taskType === 'timer'\n          ? (\n            <Form.Item\n              label=\"Value\"\n              name=\"taskValue\"\n              rules={[{ required: true, message: 'Please input a value!' }]}\n            >\n              <Select style={{ width: 150 }}>\n                {realmsOptions.map((r) => (\n                  <Select.Option key={r.value} value={r.value}>\n                    {r.label}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          )\n          : (\n            <Form.List\n              name=\"taskValue\"\n              rules={[\n                {\n                  validator: async (_, names) => {\n                    if (!names || names.length < 1) {\n                      return Promise.reject(new Error('At least one timer'));\n                    }\n                  },\n                },\n              ]}\n            >\n              {(fields, { add, remove }, { errors }) => (\n                <>\n                  {fields.map((field, index) => (\n                    <Form.Item\n                      {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                      label={index === 0 ? 'Values' : ''}\n                      required={false}\n                      key={field.key}\n                    >\n                      <Form.Item\n                        {...field}\n                        validateTrigger={['onChange', 'onBlur']}\n                        rules={[{ required: true, message: 'Please input a value!' }]}\n                        noStyle\n                      >\n                        <Select style={{ width: '60%', marginRight: '5px' }}>\n                          {realmsOptions.map((r) => <Select.Option key={r.value} value={r.value}>{r.label}</Select.Option>)}\n                        </Select>\n                      </Form.Item>\n                      {fields.length > 1 ? (\n                        <MinusCircleOutlined\n                          className=\"dynamic-delete-button\"\n                          onClick={() => remove(field.name)}\n                        />\n                      ) : null}\n                    </Form.Item>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      style={{ width: '60%' }}\n                      icon={<PlusOutlined />}\n                    >\n                      Add field\n                    </Button>\n                    <Form.ErrorList errors={errors} />\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          )}\n      </Form>\n    </Modal>\n  );\n};\n\nconst AlarmsPage = () => {\n  const [current, send] = useMachine(lightMachine);\n\n  return (\n    <Layout>\n      {current.matches('editing') ?\n        <AlarmModal current={current} send={send} /> : null\n      }\n      <Row>\n        <Col span={24}>\n          <Row justify='end'>\n            <Button icon={<PlusSquareOutlined />} onClick={() => send('CREATE_ALARM')} />\n          </Row>\n          <Table\n            dataSource={current.context.alarms.map((r: Alarm) => ({ ...r, key: r._id, }))}\n            columns={alarmsColumns(send)} />\n        </Col>\n        <Col span={24}>\n          <Row justify=\"end\">\n            <Button\n              icon={<CopyOutlined />}\n              onClick={() => {\n                message.success('Database was successfully copied 🎉');\n                navigator.clipboard.writeText(current.context.alarms.map((x) => JSON.stringify(x)).join('\\n'));\n              }}\n            />\n          </Row>\n          <pre>{current.context.alarms.map((x) => JSON.stringify(x)).join('\\n')}</pre>\n        </Col>\n        <Col span={24}>\n          <Form\n            onFinish={(values) => {\n              console.log(values.data.split('\\n').map((x: string) => JSON.parse(x)));\n              values.data\n                .split('\\n')\n                .map((x: string) => JSON.parse(x))\n                .map((x: Alarm) => Alarms.insert(x));\n            }}\n          >\n            <Row justify=\"end\">\n              <Button\n                icon={<CopyOutlined />}\n                htmlType=\"submit\"\n              />\n            </Row>\n            <Form.Item\n              name=\"data\"\n            >\n              <Input.TextArea style={{ height: '50%', minHeight: '300px' }} />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Layout>\n  );\n}\n\nexport default AlarmsPage;\n","import Nedb from 'nedb';\n\nexport default class Repository<T> {\n  db: Nedb;\n\n  constructor(collection: string) {\n    this.db = new Nedb({ filename: collection, autoload: true });\n  }\n\n  find(query: object): Promise<T[]> {\n    return new Promise((resolve, reject) => {\n      this.db.find(query, (err: any, docs: T[]) => {\n        if (err) reject(err);\n        else resolve(docs);\n      });\n    });\n  }\n\n  insert(newDoc: T): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.db.insert(newDoc, (err: any, doc: T) => {\n        if (err) reject(err);\n        else resolve(doc);\n      });\n    });\n  }\n\n  update(_id: string, update: object): Promise<number> {\n    return new Promise((resolve, reject) => {\n      this.db.update(\n        { _id },\n        { $set: { ...update } }, {}, (err: any, numberOfUpdated: number) => {\n          if (err) reject(new Error(`Updating realm with value: ${_id} - ${err.message}`));\n          else resolve(numberOfUpdated);\n        },\n      );\n    });\n  }\n\n  delete(_id: string): Promise<number> {\n    return new Promise((resolve, reject) => {\n      this.db.remove({ _id }, { multi: true }, (err: any, numRemoved: number) => {\n        if (err) reject(new Error(`Deleting realm with value: ${_id} - ${err.message}`));\n        else resolve(numRemoved);\n      });\n    });\n  }\n}\n","// eslint-disable-next-line no-use-before-define\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport {\n  Spin, Col, Layout, Row, Input, Calendar,\n  Button, Badge, Form, DatePicker, Table,\n} from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { createMachine, assign } from 'xstate';\nimport { useMachine } from '@xstate/react';\nimport { addDays, supermemoScheduleThree } from './Services/supermemo2';\nimport { StudyObject } from '../types/types';\nimport Repository from '../types/Repository';\n\n// TODO - Modify SRS with form\nconst StudyObjects = new Repository<StudyObject>('studyobj');\n\ninterface SchedulerContext {\n  studyObjects: StudyObject[],\n  currentStudyObject: StudyObject\n}\n\nconst defaultStudyObject: StudyObject = {\n  name: 'Nameless Study Object',\n  start: moment().format('yyyy-MM-DD'),\n  toc: [],\n};\n\nconst schedulerMachine = createMachine<SchedulerContext>({\n  key: 'scheduler',\n  initial: 'loading',\n  context: {\n    studyObjects: [],\n    currentStudyObject: defaultStudyObject,\n  },\n  states: {\n    loading: {\n      invoke: {\n        src: () => StudyObjects.find({}),\n        onDone: {\n          target: 'idle',\n          actions: assign((_, event) => ({\n            studyObjects: event.data,\n          })),\n        },\n      },\n    },\n    idle: {\n      on: {\n        SAVE_STUDY_OBJECT: {\n          target: 'savingStudyObject',\n          actions: assign((_, event) => ({\n            currentStudyObject: event.data.studyObject,\n          })),\n        },\n        LOAD_STUDY_OBJECT: {\n          target: 'loading',\n          actions: assign((_, event) => ({\n            currentStudyObject: event.data.studyObject,\n          })),\n        },\n        CREATE_NEW_STUDY_OBJECT: {\n          target: 'idle',\n          actions: assign((_, __) => ({\n            currentStudyObject: defaultStudyObject,\n          })),\n        },\n        DELETE_STUDY_OBJECT: {\n          target: 'deletingService',\n          actions: assign((_, __) => ({\n            currentStudyObject: defaultStudyObject,\n          })),\n        },\n      },\n    },\n    savingStudyObject: {\n      invoke: {\n        src: (context) => (context.currentStudyObject._id\n          ? StudyObjects.update(context.currentStudyObject._id, context.currentStudyObject)\n          : StudyObjects.insert(context.currentStudyObject)),\n        onDone: 'loading',\n      },\n    },\n    deletingService: {\n      invoke: {\n        src: (_, event: any) => StudyObjects.delete(event.data.studyObjectId),\n        onDone: 'loading',\n      },\n    },\n  },\n});\n\nconst ScheduleCalendar = ({ getListData }: any) => {\n  const [calendarValue, setCalendarValue] = useState(moment());\n\n  const dateCellRender = (value: moment.Moment) => {\n    // console.log(value.format('yyyy-MM-DD'));\n    const listData = getListData(value) ?? [];\n    return (\n      <ul>\n        {listData.map((item: any) => (\n          <li key={item.content} style={{ listStyle: 'none' }}>\n            <Badge status={item.type} text={item.content} />\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <Col>\n      <Row justify=\"end\">\n        <Button onClick={() => setCalendarValue(moment(calendarValue).add(-1, 'M'))}>{'<'}</Button>\n        <Button onClick={() => setCalendarValue(moment(calendarValue).add(1, 'M'))}>{'>'}</Button>\n      </Row>\n      <Calendar\n        value={calendarValue}\n        onChange={(date: moment.Moment) => setCalendarValue(date)}\n        onPanelChange={(date: moment.Moment) => setCalendarValue(date)}\n        dateCellRender={dateCellRender}\n      />\n    </Col>\n  );\n};\n\nconst StudyObjectSchedulerPage = () => {\n  const [current, send] = useMachine(schedulerMachine);\n\n  const getListData = (toc: string[], initialDate: string) => (value: moment.Moment) => {\n    if (toc.length === 0) return [];\n    const key = value.format('yyyy-MM-DD');\n\n    const mergedListData = toc\n      .map((title, i) => {\n        const titleDate = addDays(initialDate, i);\n        return supermemoScheduleThree(titleDate, title);\n      })\n      .reduce((acc: any, x: any) => {\n        Object.keys(x).forEach((k: string) => {\n          acc[k] = (acc[k] ?? []).concat(x[k]);\n        })\n        return acc;\n      }, {})\n\n    return mergedListData[key];\n  }\n\n  return (\n    <Layout>\n      <Row gutter={16}>\n        <Col sm={24} md={12} style={{ height: '500px' }}>\n          {current.matches('idle') ? (\n            <Form\n              initialValues={{\n                name: current.context.currentStudyObject.name,\n                start: moment(current.context.currentStudyObject.start, 'yyyy-MM-DD'),\n                toc: current.context.currentStudyObject.toc.join('\\n')\n              }}\n              onFinish={(values) => {\n                send('SAVE_STUDY_OBJECT',\n                  {\n                    data: {\n                      studyObject: {\n                        ...current.context.currentStudyObject,\n                        name: values.name,\n                        start: values.start.format('yyyy-MM-DD'),\n                        toc: values.toc.split('\\n'),\n                      }\n                    }\n                  })\n              }}>\n              <Form.Item name=\"name\" rules={[{ required: true }]}>\n                <Input />\n              </Form.Item>\n              <Form.Item name=\"start\" rules={[{ required: true }]}>\n                <DatePicker />\n              </Form.Item>\n              <Form.Item name=\"toc\" rules={[{ required: true }]}>\n                <Input.TextArea style={{ height: '50%', minHeight: '300px' }} />\n              </Form.Item>\n              <Row justify=\"end\">\n                <Button htmlType=\"submit\">\n                  {current.context.currentStudyObject._id\n                    ? 'Update/Schedule' : 'Create/Schedule'}\n                </Button>\n              </Row>\n            </Form>\n          )\n            : <Spin size=\"large\" />}\n        </Col>\n        <Col sm={24} md={12}>\n          <Table\n            dataSource={current.context.studyObjects\n              .map((x) => ({ ...x, key: x._id }))}\n            onRow={(record) => ({\n              onClick: () => {\n                if (record._id === current.context.currentStudyObject._id) return;\n                send('LOAD_STUDY_OBJECT',\n                  {\n                    data: {\n                      studyObject: record,\n                    },\n                  });\n              },\n            })}\n            pagination={{ pageSize: 5 }}\n            columns={[\n              {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n              },\n              {\n                title: 'Start',\n                dataIndex: 'start',\n                key: 'start',\n              },\n              {\n                title: 'Operation',\n                dataIndex: 'operation',\n                render: (_: any, record: any) => (\n                  <Row>\n                    <Button\n                      icon={<DeleteOutlined />}\n                      onClick={() => send('DELETE_STUDY_OBJECT', {\n                        data: {\n                          studyObjectId: record._id,\n                        },\n                      })}\n                    />\n                  </Row>\n                ),\n                width: 100,\n              },\n            ]}\n          />\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <ScheduleCalendar\n            getListData={getListData(\n              current.context.currentStudyObject.toc,\n              current.context.currentStudyObject.start,\n            )}\n          />\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default StudyObjectSchedulerPage;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\n\nimport 'antd/dist/antd.css';\nimport { createMachine } from 'xstate';\nimport { useMachine } from '@xstate/react';\nimport { Layout, Menu } from 'antd';\nimport AlarmsPage from './app/AlarmsPage';\nimport IndexSchedulerPage from './app/IndexSchedulerPage';\n\nconst { Header, Footer, Content } = Layout;\n\ntype NavEvent =\n  | { type: 'TO_ALARM_PAGE' }\n  | { type: 'TO_REALM_PAGE' }\n  | { type: 'TO_INDEX_SCHEDULER_PAGE' }\n\ninterface NavContext {\n}\n\nconst navMachine = createMachine<NavContext, NavEvent>({\n  key: 'navigation',\n  // initial: 'alarmPage',\n  initial: 'indexSchedulerPage',\n  context: {},\n  states: {\n    alarmPage: {},\n    realmPage: {},\n    indexSchedulerPage: {},\n  },\n  on: {\n    TO_ALARM_PAGE: 'alarmPage',\n    TO_REALM_PAGE: 'realmPage',\n    TO_INDEX_SCHEDULER_PAGE: 'indexSchedulerPage',\n  },\n});\n\nfunction App() {\n  const [current, send] = useMachine(navMachine);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header>\n        <div className=\"logo\" />\n        {/* <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['0']}> */}\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key=\"0\" onClick={() => send('TO_ALARM_PAGE')}>\n            Alarms\n          </Menu.Item>\n          <Menu.Item key=\"1\" onClick={() => send('TO_REALM_PAGE')}>\n            Realms\n          </Menu.Item>\n          <Menu.Item key=\"2\" onClick={() => send('TO_INDEX_SCHEDULER_PAGE')}>\n            Index Scheduler\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '50px 50px', minHeight: '100%' }}>\n        {(() => {\n          switch (current.value) {\n            case 'alarmPage':\n              return <AlarmsPage />;\n            case 'realmPage':\n              return <div>hola</div>;\n            case 'indexSchedulerPage':\n              return <IndexSchedulerPage />;\n            default:\n              return <></>;\n          }\n        })()}\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}