{"version":3,"sources":["app/Services/supermemo2.ts","app/AlarmsPage.tsx","types/Repository.ts","app/IndexSchedulerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["supermemo2","history","a","b","c","d","theta","isArrayEmpty","length","Error","isEveryNumberInRange","reduce","acc","x","streak","historySum","daysToReview","Math","pow","max","toFixed","addDays","date","format","add","parse","Date","days","supermemoScheduleThree","label","slice","lastDate","newDate","parseInt","concat","type","content","require","flag","Repository","collection","db","this","Nedb","filename","autoload","query","Promise","resolve","reject","find","err","docs","newDoc","insert","doc","_id","update","$set","numberOfUpdated","message","remove","multi","numRemoved","Alarms","HOUR_FORMAT","DATE_FORMAT","stringToColour","str","hash","i","charCodeAt","colour","j","toString","substr","alarmsColumns","send","title","dataIndex","key","render","s","width","value","map","tag","color","sorter","compare","aT","bT","isEqual","isAfter","start","multiple","join","filters","text","onFilter","record","weekdays","includes","_","icon","EditOutlined","onClick","data","alarm","traceTag","DeleteOutlined","alarmId","CopyOutlined","undefined","lightMachine","createMachine","initial","context","alarms","alarmToEdit","states","loading","invoke","src","onDone","target","actions","assign","event","idle","on","creating","end","then","editing","editingService","deletingService","delete","duplicatingService","console","log","AlarmModal","current","Form","useForm","form","useState","task","taskType","setTaskType","initialValues","taskValue","moment","startDate","endDate","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","realmsOptions","visible","matches","onOk","validateFields","values","resetFields","editedAlarm","catch","info","onCancel","name","autoComplete","Item","rules","required","Group","options","style","onChange","Option","r","List","validator","names","fields","errors","field","index","validateTrigger","noStyle","marginRight","MinusCircleOutlined","className","PlusOutlined","ErrorList","AlarmsPage","useMachine","justify","PlusSquareOutlined","dataSource","columns","success","navigator","clipboard","writeText","JSON","stringify","StudyObjects","defaultStudyObject","toc","schedulerMachine","studyObjects","currentStudyObject","studyObject","__","savingStudyObject","ScheduleCalendar","getListData","calendarValue","setCalendarValue","onPanelChange","dateCellRender","listData","item","listStyle","status","StudyObjectSchedulerPage","initialDate","gutter","height","onFinish","split","TextArea","minHeight","htmlType","size","onRow","pagination","pageSize","titleDate","Object","keys","forEach","k","Header","Layout","Footer","Content","navMachine","alarmPage","realmPage","indexSchedulerPage","App","theme","mode","defaultSelectedKeys","padding","IndexSchedulerPage","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fafa217.chunk.js","sourcesContent":["import { parse, add, format } from 'date-fns';\r\n// Variation from https://gist.github.com/doctorpangloss/13ab29abd087dc1927475e560f876797\r\n\r\nexport const supermemo2 = (history: number[], a: number = 6.0, b: number = -0.8,\r\n  c: number = 0.28, d: number = 0.02, theta: number = 0.2): string => {\r\n  const isArrayEmpty = history.length < 1;\r\n  if (isArrayEmpty) throw new Error('History must contain at least one element');\r\n  const isEveryNumberInRange = history.reduce((acc, x) => acc && (0 <= x && x <= 5), true);\r\n  if (!isEveryNumberInRange) throw new Error('Range allowed is 0 - 5');\r\n\r\n  const streak: number = history.reduce((acc, x) => x >= 3 ? acc + 1 : 0, 0);\r\n\r\n  if (streak === 0) return '1';\r\n  if (streak === 1) return '1';\r\n\r\n  const historySum = history.reduce((acc, x) => acc + (b + (c * x) + (d * x * x)), 0)\r\n  // console.log('historySum', historySum);\r\n  const daysToReview = a * Math.pow(Math.max(1.3, 2.5 + historySum), theta * streak);\r\n  // return daysToReview.toFixed(2);\r\n  return (daysToReview * 3 / 4).toFixed(2);\r\n  // return (daysToReview / 2).toFixed(2);\r\n};\r\n\r\nexport const addDays = (date: string, d: number): string => format(add(\r\n  parse(date, 'yyyy-MM-dd', new Date()), { days: d }), 'yyyy-MM-dd');\r\n\r\nexport const supermemoScheduleThree = (date: string, label: string) => {\r\n  // 'yyyy-MM-dd'\r\n  const daysToAdd: string[] = [\r\n    supermemo2([3]),\r\n    supermemo2([3, 3]),\r\n    supermemo2([3, 3, 3]),\r\n    supermemo2([3, 3, 3, 3]),\r\n    supermemo2([3, 3, 3, 3, 3]),\r\n  ];\r\n  // console.log(daysToAdd);\r\n\r\n  // const schedule = [\r\n  //   date,\r\n  //   ...daysToAdd\r\n  //     .map((d: string) => addDays(date, parseInt(d)))\r\n  // ];\r\n  // console.log(schedule);\r\n\r\n  const incrementalSchedule = daysToAdd\r\n    .reduce((acc: string[], d: string) => {\r\n      const [lastDate] = acc.slice(-1);\r\n      const newDate = addDays(lastDate, parseInt(d));\r\n      return acc.concat([newDate]);\r\n    }, [date])\r\n  // console.log(incrementalSchedule);\r\n\r\n  const incrementalScheduleObject = incrementalSchedule\r\n    .reduce((acc: any, x: string) => {\r\n      return {\r\n        ...acc,\r\n        [x]: [{ type: 'success', content: label }],\r\n      };\r\n    }, {})\r\n  // console.log(incrementalScheduleObject);\r\n  return incrementalScheduleObject;\r\n}\r\n\r\nif (require.main === module) {\r\n  // const trace = (x: any) => {\r\n  //   console.log(x);\r\n  //   return x;\r\n  // }\r\n\r\n  // const trycatchlog = (fn: Function) => {\r\n  //   try {\r\n  //     console.log(fn());\r\n  //   } catch (error) {\r\n  //     console.log('ERROR:', error.message);\r\n  //   }\r\n  // }\r\n\r\n  // // It should return 1\r\n  // trycatchlog(() => supermemo2(trace([0])));\r\n  // // It should throw error\r\n  // trycatchlog(() => supermemo2(trace([])));\r\n  // // It should throw error\r\n  // trycatchlog(() => supermemo2(trace([6])));\r\n  // trycatchlog(() => supermemo2(trace([6, 7])));\r\n  // trycatchlog(() => supermemo2(trace([6, 7, 3])));\r\n  // // It should return 1\r\n  // trycatchlog(() => supermemo2(trace([3, 1, 0])));\r\n  // trycatchlog(() => supermemo2(trace([3, 1, 0, 1, 2])));\r\n  // // It should return more than 1\r\n  // trycatchlog(() => supermemo2(trace([3, 1, 0, 1, 4, 5])));\r\n  // // It should return more than 1\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 0, 0, 0, 0])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 0, 0, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 0, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 0, 1, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([0, 1, 1, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([1, 1, 1, 1, 0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([5, 5, 5, 5, 5, 5])));\r\n  // trycatchlog(() => supermemo2(trace([5, 5, 5, 5, 5, 5, 5])));\r\n\r\n  // trycatchlog(() => supermemo2(trace([0, 3])));\r\n  // trycatchlog(() => supermemo2(trace([3])));\r\n}","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { Repository } from '../types/Repository';\r\nimport { Alarm, Task } from '../types/types';\r\nimport { isAfter, isEqual, parse } from 'date-fns';\r\nimport { assign, createMachine, Event, EventData, State } from 'xstate';\r\nimport { useMachine } from '@xstate/react';\r\nimport { Table, Row, Col, Button, message, Form, Layout, Modal, Checkbox, TimePicker, DatePicker, Select, Tag } from 'antd';\r\nimport { CopyOutlined, EditOutlined, DeleteOutlined, PlusSquareOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nconst Alarms = new Repository<Alarm>('alarms');\r\n\r\nconst HOUR_FORMAT = 'HH:mm';\r\nconst DATE_FORMAT = 'yyyy-MM-DD';\r\n\r\nconst dateStringSorter = (format: string) => (a: string, b: string) => {\r\n  const aT = parse(a, format, new Date());\r\n  const bT = parse(b, format, new Date());\r\n  if (isEqual(aT, bT)) return 0;\r\n  if (isAfter(aT, bT)) return 1;\r\n  return -1;\r\n}\r\n\r\nconst stringToColour = (str: string) => {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var j = 0; j < 3; j++) {\r\n    var value = (hash >> (j * 8)) & 0xFF;\r\n    colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nconst alarmsColumns = (send: any) => [\r\n  {\r\n    title: 'Id',\r\n    dataIndex: '_id',\r\n    key: 'name',\r\n    render: (s: string) => `${s.substr(0, 5)}...`,\r\n    width: 50,\r\n  },\r\n  // {\r\n  //   title: 'Value',\r\n  //   dataIndex: 'value',\r\n  //   key: 'value',\r\n  //   filters: [\r\n  //     { text: 'Fitness', value: 'fitness' },\r\n  //     { text: 'Focus', value: 'focus' }\r\n  //   ],\r\n  //   onFilter: (value: any, record: any) => record.value === value,\r\n  //   sorter: {\r\n  //     compare: (a: Alarm, b: Alarm) => a.group?.localeCompare(b.group ?? '') ?? 0,\r\n  //     multiple: 3,\r\n  //   }\r\n  // },\r\n  {\r\n    title: 'Task',\r\n    dataIndex: 'task',\r\n    key: 'task',\r\n    render: (s: Task) => s ? <>\r\n      {s.type === 'queue' ? s.value.map((tag, i) =>\r\n        <Tag color={stringToColour(tag)} key={i}>\r\n          {tag}\r\n        </Tag>\r\n      ) : <Tag color={stringToColour(s.value)}>{s.value}</Tag>}\r\n    </> : '',\r\n    width: 320,\r\n  },\r\n  {\r\n    title: 'Start',\r\n    dataIndex: 'start',\r\n    key: 'start',\r\n    sorter: {\r\n      compare: (a: Alarm, b: Alarm) => dateStringSorter(HOUR_FORMAT)(a.start, b.start),\r\n      multiple: 2,\r\n    }\r\n  },\r\n  {\r\n    title: 'End',\r\n    dataIndex: 'end',\r\n    key: 'end',\r\n  },\r\n  {\r\n    title: 'Weekdays',\r\n    dataIndex: 'weekdays',\r\n    key: 'weekdays',\r\n    render: (s: string[]) => `${s.join(\",\")}`,\r\n    filters: [\r\n      { text: 'Su', value: 0 },\r\n      { text: 'M', value: 1 },\r\n      { text: 'Tu', value: 2 },\r\n      { text: 'W', value: 3 },\r\n      { text: 'Th', value: 4 },\r\n      { text: 'F', value: 5 },\r\n      { text: 'Sa', value: 6 },\r\n    ],\r\n    onFilter: (value: any, record: any) => record.weekdays.length === 0 ? true : record.weekdays.includes(value),\r\n  },\r\n  {\r\n    title: 'Operation',\r\n    dataIndex: 'operation',\r\n    render: (_: any, record: any) => <Row>\r\n      <Button icon={<EditOutlined />}\r\n        onClick={() => send('OPEN_EDIT_ALARM_MODAL', {\r\n          data: {\r\n            alarm: traceTag('OPEN_EDIT_ALARM_MODAL')(record)\r\n          }\r\n        })} />\r\n      <Button icon={<DeleteOutlined />}\r\n        onClick={() => send('DELETE_ALARM', {\r\n          data: {\r\n            alarmId: traceTag('DELETE_ALARM')(record._id)\r\n          }\r\n        })} />\r\n      <Button icon={<CopyOutlined />}\r\n        onClick={() => send('DUPLICATE_ALARM', {\r\n          data: {\r\n            alarm: traceTag('DUPLICATE_ALARM')({ ...record, key: undefined, _id: undefined })\r\n          }\r\n        })} />\r\n    </Row>,\r\n    width: 150,\r\n  }\r\n]\r\n\r\n// The events that the machine handles\r\ntype LightEvent =\r\n  | { type: 'CREATE_ALARM' }\r\n  | { type: 'OPEN_CREATE_ALARM_MODAL' }\r\n  | { type: 'EDIT_ALARM', data: { alarm: Alarm } }\r\n  | { type: 'OPEN_EDIT_ALARM_MODAL', data: { alarm: Alarm } }\r\n  | { type: 'DELETE_ALARM', data: { alarmId: string } }\r\n  | { type: 'DUPLICATE_ALARM', data: { alarm: Alarm } }\r\n  | { type: 'CLOSE_ALARM_MODAL' }\r\n\r\n// The context (extended state) of the machine\r\ninterface LightContext {\r\n  alarms: Alarm[];\r\n  alarmToEdit?: Alarm;\r\n}\r\n\r\nconst lightMachine = createMachine<LightContext, LightEvent>({\r\n  key: 'light',\r\n  initial: 'loading',\r\n  context: {\r\n    alarms: [],\r\n    alarmToEdit: undefined,\r\n  },\r\n  states: {\r\n    loading: {\r\n      invoke: {\r\n        src: () => Alarms.find({}),\r\n        onDone: {\r\n          target: 'idle',\r\n          actions: assign((_, event) => ({\r\n            alarms: traceTag('loading')(event.data)\r\n          }))\r\n        }\r\n      }\r\n    },\r\n    idle: {\r\n      on: {\r\n        'CREATE_ALARM': 'creating',\r\n        'DELETE_ALARM': 'deletingService',\r\n        'DUPLICATE_ALARM': 'duplicatingService',\r\n        'OPEN_EDIT_ALARM_MODAL': {\r\n          target: 'editing',\r\n          actions: assign((_, event) => ({\r\n            alarmToEdit: traceTag('idle')(event.data.alarm)\r\n          }))\r\n        }\r\n      }\r\n    },\r\n    creating: {\r\n      invoke: {\r\n        src: () => Alarms.insert({ start: '06:00', end: '07:00', value: 'test', weekdays: [] })\r\n          .then(traceTag('creating'))\r\n          .then(_ => Alarms.find({})),\r\n        onDone: {\r\n          target: 'idle',\r\n          actions: assign((_, event) => ({\r\n            alarms: traceTag('creating')(event.data)\r\n          }))\r\n        }\r\n      }\r\n    },\r\n    editing: {\r\n      on: {\r\n        'EDIT_ALARM': 'editingService',\r\n        'CLOSE_ALARM_MODAL': 'idle'\r\n      }\r\n    },\r\n    editingService: {\r\n      invoke: {\r\n        src: (_, event: any) => Alarms.update(event.data.alarm._id, event.data.alarm),\r\n        onDone: 'loading'\r\n      },\r\n    },\r\n    deletingService: {\r\n      invoke: {\r\n        src: (_, event: any) => Alarms.delete(event.data.alarmId),\r\n        onDone: 'loading'\r\n      },\r\n    },\r\n    duplicatingService: {\r\n      invoke: {\r\n        src: (_, event: any) => Alarms.insert(event.data.alarm)\r\n          .then(traceTag('creating'))\r\n          .then(_ => Alarms.find({})),\r\n        onDone: {\r\n          target: 'idle',\r\n          actions: assign((_, event) => ({\r\n            alarms: traceTag('creating')(event.data)\r\n          }))\r\n        }\r\n      },\r\n    },\r\n  }\r\n});\r\n\r\n// const trace = (x: any) => { console.log(x); return x; }\r\nconst traceTag_ = (flag: boolean) => (tag: string) => (x: any) => { if (flag) { console.log(tag, x); return x; } }\r\nconst traceTag = traceTag_(true);\r\n\r\ntype StateUseMachine = { current: State<LightContext, LightEvent>, send: (event: Event<LightEvent>, payload?: EventData | undefined) => State<LightContext, LightEvent> }\r\n\r\nconst AlarmModal = ({ current, send }: StateUseMachine) => {\r\n  const [form] = Form.useForm();\r\n  const [taskType, setTaskType] = useState<\"timer\" | \"queue\" | \"spotify\" | \"sound\" | \"webpage\">(current.context.alarmToEdit?.task?.type ?? 'timer');\r\n\r\n  const initialValues = traceTag('initialValues')({\r\n    ...current.context.alarmToEdit,\r\n    task: current.context.alarmToEdit?.task?.type ?? 'timer',\r\n    taskValue: current.context.alarmToEdit?.task?.value ?? '',\r\n    start: current.context.alarmToEdit?.start\r\n      ? moment(current.context.alarmToEdit.start, HOUR_FORMAT) : undefined,\r\n    end: current.context.alarmToEdit?.end\r\n      ? moment(current.context.alarmToEdit.end, HOUR_FORMAT) : undefined,\r\n    startDate: current.context.alarmToEdit?.startDate\r\n      ? moment(current.context.alarmToEdit.startDate, DATE_FORMAT) : undefined,\r\n    endDate: current.context.alarmToEdit?.endDate\r\n      ? moment(current.context.alarmToEdit.endDate, DATE_FORMAT) : undefined,\r\n  })\r\n\r\n  const onOk = () => {\r\n    form\r\n      .validateFields()\r\n      .then(values => {\r\n        form.resetFields();\r\n        console.log(values);\r\n        const editedAlarm = traceTag('validateFields')({\r\n          ...current.context.alarmToEdit,\r\n          ...values,\r\n          // remane values.task to values.taskType\r\n          task: { type: values.task, value: values.taskValue },\r\n          start: values.start?.format(HOUR_FORMAT) ?? undefined,\r\n          end: values.end?.format(HOUR_FORMAT) ?? undefined,\r\n          startDate: values.startDate?.format(DATE_FORMAT) ?? undefined,\r\n          endDate: values.endDate?.format(DATE_FORMAT) ?? undefined,\r\n          taskValue: undefined,\r\n          key: undefined,\r\n          // temp\r\n          value: undefined\r\n        });\r\n        send('EDIT_ALARM', { data: { alarm: editedAlarm } });\r\n      })\r\n      .catch(info => {\r\n        console.log('Validate Failed:', info);\r\n      });\r\n  }\r\n\r\n  const onCancel = () => send('CLOSE_ALARM_MODAL')\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 4 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 20 },\r\n    },\r\n  };\r\n  const formItemLayoutWithOutLabel = {\r\n    wrapperCol: {\r\n      xs: { span: 24, offset: 0 },\r\n      sm: { span: 20, offset: 4 },\r\n    },\r\n  };\r\n\r\n  const realmsOptions = [\r\n    { value: \"fitness\", label: \"Exercise\" },\r\n    { value: \"work\", label: \"Work\" },\r\n    { value: \"worklite\", label: \"Work Lite\" },\r\n    { value: \"focus\", label: \"Focus\" },\r\n    { value: \"life\", label: \"Life Management\" },\r\n    { value: \"studies\", label: \"Studies\" },\r\n    { value: \"inspiration\", label: \"Inspiration\" },\r\n    { value: \"chores\", label: \"Chores\" },\r\n    { value: \"music\", label: \"Music\" },\r\n    { value: \"salsa\", label: \"Salsa time\" },\r\n    { value: \"reggae\", label: \"Regueton\" },\r\n    { value: \"politics\", label: \"Politics\" },\r\n  ]\r\n\r\n  return <Modal visible={current.matches('editing')}\r\n    onOk={onOk}\r\n    onCancel={onCancel}>\r\n    <Form\r\n      name=\"basic\"\r\n      form={form}\r\n      labelCol={{ span: 4 }}\r\n      wrapperCol={{ span: 20 }}\r\n      initialValues={initialValues}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Start\"\r\n        name=\"start\"\r\n        rules={[{ required: true, message: 'Please input you a start time!' }]}\r\n      >\r\n        <TimePicker />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"End\"\r\n        name=\"end\"\r\n      >\r\n        <TimePicker />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Start Date\"\r\n        name=\"startDate\"\r\n      >\r\n        <DatePicker />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"End Date\"\r\n        name=\"endDate\"\r\n      >\r\n        <DatePicker />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Weekdays\"\r\n        name=\"weekdays\"\r\n      >\r\n        <Checkbox.Group options={[\r\n          { value: 0, label: 'Su' },\r\n          { value: 1, label: 'M' },\r\n          { value: 2, label: 'Tu' },\r\n          { value: 3, label: 'W' },\r\n          { value: 4, label: 'Th' },\r\n          { value: 5, label: 'F' },\r\n          { value: 6, label: 'Sa' },\r\n        ]} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Task type\"\r\n        name=\"task\"\r\n      >\r\n        <Select style={{ width: 150 }}\r\n          onChange={(value: 'timer' | 'queue') => setTaskType(value)}>\r\n          <Select.Option value=\"timer\">Timer</Select.Option>\r\n          <Select.Option value=\"queue\">Queue</Select.Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      {taskType === 'timer' ?\r\n        <Form.Item\r\n          label=\"Value\"\r\n          name=\"taskValue\"\r\n          rules={[{ required: true, message: 'Please input a value!' }]}\r\n        >\r\n          <Select style={{ width: 150 }}>\r\n            {realmsOptions.map((r) => <Select.Option key={r.value} value={r.value}>{r.label}</Select.Option>)}\r\n          </Select>\r\n        </Form.Item> :\r\n        <>\r\n          <Form.List\r\n            name=\"taskValue\"\r\n            rules={[\r\n              {\r\n                validator: async (_, names) => {\r\n                  if (!names || names.length < 1) {\r\n                    return Promise.reject(new Error('At least one timer'));\r\n                  }\r\n                },\r\n              },\r\n            ]}\r\n          >\r\n            {(fields, { add, remove }, { errors }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                    label={index === 0 ? 'Values' : ''}\r\n                    required={false}\r\n                    key={field.key}\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[{ required: true, message: 'Please input a value!' }]}\r\n                      noStyle\r\n                    >\r\n                      <Select style={{ width: '60%', marginRight: '5px' }}>\r\n                        {realmsOptions.map((r) => <Select.Option key={r.value} value={r.value}>{r.label}</Select.Option>)}\r\n                      </Select>\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => remove(field.name)}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    style={{ width: '60%' }}\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add field\r\n                  </Button>\r\n                  <Form.ErrorList errors={errors} />\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </>\r\n      }\r\n    </Form>\r\n  </Modal>\r\n}\r\n\r\nconst AlarmsPage = () => {\r\n  const [current, send] = useMachine(lightMachine);\r\n\r\n  return (\r\n    <Layout>\r\n      {current.matches('editing') ?\r\n        <AlarmModal current={current} send={send} /> : null\r\n      }\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='end'>\r\n            <Button icon={<PlusSquareOutlined />} onClick={() => send('CREATE_ALARM')} />\r\n          </Row>\r\n          <Table\r\n            dataSource={current.context.alarms.map((r: Alarm) => ({ ...r, key: r._id, }))}\r\n            columns={alarmsColumns(send)} />\r\n        </Col>\r\n        <Col span={24}>\r\n          <Row justify='end'>\r\n            <Button icon={<CopyOutlined />} onClick={() => {\r\n              message.success('Database was successfully copied 🎉');\r\n              navigator.clipboard.writeText(current.context.alarms.map(x => JSON.stringify(x)).join('\\n'))\r\n            }} />\r\n          </Row>\r\n          <pre>{current.context.alarms.map(x => JSON.stringify(x)).join('\\n')}</pre>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AlarmsPage;\r\n","import Nedb from 'nedb';\r\n\r\nexport class Repository<T> {\r\n  db: Nedb;\r\n\r\n  constructor(collection: string) {\r\n    this.db = new Nedb({ filename: collection, autoload: true });\r\n  }\r\n\r\n  find(query: object): Promise<T[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.find(query, (err: any, docs: T[]) => {\r\n        if (err) reject(err);\r\n        else resolve(docs);\r\n      })\r\n    });\r\n  }\r\n\r\n  insert(newDoc: T): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.insert(newDoc, (err: any, doc: T) => {\r\n        if (err) reject(err);\r\n        else resolve(doc);\r\n      })\r\n    });\r\n  }\r\n\r\n  update(_id: string, update: object): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.update({ _id }, { $set: { ...update } }, {}, (err: any, numberOfUpdated: number) => {   // Callback is optional\r\n        if (err)\r\n          reject(new Error(`Updating realm with value: ${_id} - ${err.message}`));\r\n        else\r\n          resolve(numberOfUpdated);\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(_id: string): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.remove({ _id }, { multi: true }, (err: any, numRemoved: number) => {\r\n        if (err)\r\n          reject(new Error(`Deleting realm with value: ${_id} - ${err.message}`));\r\n        else\r\n          resolve(numRemoved);\r\n      });\r\n    });\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { Spin, Col, Layout, Row, Input, Calendar, Button, Badge, Form, DatePicker, Table } from 'antd';\r\nimport { addDays, supermemoScheduleThree } from './Services/supermemo2';\r\nimport moment from 'moment';\r\nimport { StudyObject } from '../types/types';\r\nimport { createMachine, assign } from 'xstate';\r\nimport { Repository } from '../types/Repository';\r\nimport { useMachine } from '@xstate/react';\r\n\r\n// modify srs with form\r\nconst StudyObjects = new Repository<StudyObject>('studyobj');\r\n\r\ninterface SchedulerContext {\r\n  studyObjects: StudyObject[],\r\n  currentStudyObject: StudyObject\r\n}\r\n\r\nconst defaultStudyObject: StudyObject = {\r\n  name: 'Nameless Study Object',\r\n  start: moment().format('yyyy-MM-DD'),\r\n  toc: []\r\n}\r\n\r\nconst schedulerMachine = createMachine<SchedulerContext>({\r\n  key: 'scheduler',\r\n  initial: 'loading',\r\n  context: {\r\n    studyObjects: [],\r\n    currentStudyObject: defaultStudyObject,\r\n  },\r\n  states: {\r\n    loading: {\r\n      invoke: {\r\n        src: () => StudyObjects.find({}),\r\n        onDone: {\r\n          target: 'idle',\r\n          actions: assign((_, event) => ({\r\n            studyObjects: event.data\r\n          }))\r\n        }\r\n      }\r\n    },\r\n    idle: {\r\n      on: {\r\n        'SAVE_STUDY_OBJECT': {\r\n          target: 'savingStudyObject',\r\n          actions: assign((_, event) => ({\r\n            currentStudyObject: event.data.studyObject\r\n          }))\r\n        },\r\n        'LOAD_STUDY_OBJECT': {\r\n          target: 'loading',\r\n          actions: assign((_, event) => ({\r\n            currentStudyObject: event.data.studyObject\r\n          }))\r\n        },\r\n        'CREATE_NEW_STUDY_OBJECT': {\r\n          target: 'idle',\r\n          actions: assign((_, __) => ({\r\n            currentStudyObject: defaultStudyObject\r\n          }))\r\n        },\r\n      }\r\n    },\r\n    savingStudyObject: {\r\n      invoke: {\r\n        src: (context, _) => context.currentStudyObject._id\r\n          ? StudyObjects.update(context.currentStudyObject._id, context.currentStudyObject)\r\n          : StudyObjects.insert(context.currentStudyObject),\r\n        onDone: 'loading'\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\nconst ScheduleCalendar = ({ getListData }: any) => {\r\n  const [calendarValue, setCalendarValue] = useState(moment())\r\n\r\n  const dateCellRender = (value: moment.Moment) => {\r\n    // console.log(value.format('yyyy-MM-DD'));\r\n    const listData = getListData(value) ?? [];\r\n    return (\r\n      <ul>\r\n        {listData.map((item: any) => (\r\n          <li key={item.content} style={{ listStyle: 'none' }}>\r\n            <Badge status={item.type} text={item.content} />\r\n          </li>\r\n        ))}\r\n      </ul >\r\n    );\r\n  }\r\n\r\n  return <Col>\r\n    <Row justify='end'>\r\n      <Button onClick={() => setCalendarValue(moment(calendarValue).add(-1, 'M'))}>{'<'}</Button>\r\n      <Button onClick={() => setCalendarValue(moment(calendarValue).add(1, 'M'))}>{'>'}</Button>\r\n    </Row>\r\n    <Calendar\r\n      value={calendarValue}\r\n      onChange={(date: moment.Moment) => setCalendarValue(date)}\r\n      onPanelChange={(date: moment.Moment) => setCalendarValue(date)}\r\n      dateCellRender={dateCellRender} />\r\n  </Col>\r\n}\r\n\r\nconst StudyObjectSchedulerPage = () => {\r\n  const [current, send] = useMachine(schedulerMachine);\r\n\r\n  const getListData = (toc: string[], initialDate: string) => (value: moment.Moment) => {\r\n    if (toc.length === 0) return [];\r\n    const key = value.format('yyyy-MM-DD');\r\n\r\n    const mergedListData = toc\r\n      .map((title, i) => {\r\n        const titleDate = addDays(initialDate, i);\r\n        return supermemoScheduleThree(titleDate, title);\r\n      })\r\n      .reduce((acc: any, x: any) => {\r\n        Object.keys(x).forEach((k: string) => {\r\n          acc[k] = (acc[k] ?? []).concat(x[k]);\r\n        })\r\n        return acc;\r\n      }, {})\r\n\r\n    // return supermemoScheduleThree(currentDate, firstLabel)[key];\r\n    return mergedListData[key];\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Row gutter={16}>\r\n        <Col span={12} style={{ height: '500px' }}>\r\n          {current.matches('idle') ?\r\n            <Form\r\n              initialValues={{\r\n                name: current.context.currentStudyObject.name,\r\n                start: moment(current.context.currentStudyObject.start, 'yyyy-MM-DD'),\r\n                toc: current.context.currentStudyObject.toc.join('\\n')\r\n              }}\r\n              onFinish={(values) => {\r\n                send('SAVE_STUDY_OBJECT',\r\n                  {\r\n                    data: {\r\n                      studyObject: {\r\n                        ...current.context.currentStudyObject,\r\n                        name: values.name,\r\n                        start: values.start.format('yyyy-MM-DD'),\r\n                        toc: values.toc.split('\\n'),\r\n                      }\r\n                    }\r\n                  })\r\n              }}>\r\n              <Form.Item name='name' rules={[{ required: true }]}>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name='start' rules={[{ required: true }]}>\r\n                <DatePicker />\r\n              </Form.Item>\r\n              <Form.Item name='toc' rules={[{ required: true }]}>\r\n                <Input.TextArea style={{ height: '50%', minHeight: '300px' }} />\r\n              </Form.Item>\r\n              <Row justify='end'>\r\n                <Button htmlType='submit'>Schedule</Button>\r\n              </Row>\r\n            </Form>\r\n            : <Spin size=\"large\" />}\r\n        </Col>\r\n        <Col span={12}>\r\n          <Table dataSource={current.context.studyObjects\r\n            .map(x => ({ ...x, key: x._id }))}\r\n            onRow={(record) => ({\r\n              onClick: (_) => {\r\n                if (record._id === current.context.currentStudyObject._id)\r\n                  return;\r\n                send('LOAD_STUDY_OBJECT',\r\n                  {\r\n                    data: {\r\n                      studyObject: record\r\n                    }\r\n                  })\r\n              },\r\n            })}\r\n            pagination={{ pageSize: 5 }}\r\n            columns={[\r\n              {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n              },\r\n              {\r\n                title: 'Start',\r\n                dataIndex: 'start',\r\n                key: 'start',\r\n              }\r\n            ]} />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        <Col span={24}>\r\n          <ScheduleCalendar getListData={getListData(current.context.currentStudyObject.toc, current.context.currentStudyObject.start)} />\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default StudyObjectSchedulerPage;","import React from 'react';\nimport AlarmsPage from './app/AlarmsPage';\n\nimport 'antd/dist/antd.css';\nimport { createMachine } from 'xstate';\nimport { useMachine } from '@xstate/react';\nimport { Layout, Menu } from 'antd';\nimport IndexSchedulerPage from './app/IndexSchedulerPage';\n\nconst { Header, Footer, Content } = Layout;\n\ntype NavEvent =\n  | { type: 'TO_ALARM_PAGE' }\n  | { type: 'TO_REALM_PAGE' }\n  | { type: 'TO_INDEX_SCHEDULER_PAGE' }\n\n\ninterface NavContext {\n}\n\nconst navMachine = createMachine<NavContext, NavEvent>({\n  key: 'navigation',\n  // initial: 'alarmPage',\n  initial: 'indexSchedulerPage',\n  context: {},\n  states: {\n    alarmPage: {},\n    realmPage: {},\n    indexSchedulerPage: {},\n  },\n  on: {\n    'TO_ALARM_PAGE': 'alarmPage',\n    'TO_REALM_PAGE': 'realmPage',\n    'TO_INDEX_SCHEDULER_PAGE': 'indexSchedulerPage',\n  }\n})\n\n\nfunction App() {\n  const [current, send] = useMachine(navMachine);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header>\n        <div className=\"logo\" />\n        {/* <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['0']}> */}\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key={'0'} onClick={() => send('TO_ALARM_PAGE')}>\n            {'Alarms'}\n          </Menu.Item>\n          <Menu.Item key={'1'} onClick={() => send('TO_REALM_PAGE')}>\n            {'Realms'}\n          </Menu.Item>\n          <Menu.Item key={'2'} onClick={() => send('TO_INDEX_SCHEDULER_PAGE')}>\n            {'Index Scheduler'}\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '50px 50px', minHeight: '100%' }}>\n        {(() => {\n          switch (current.value) {\n            case 'alarmPage':\n              return <AlarmsPage />\n            case 'realmPage':\n              return <div>hola</div>\n            case 'indexSchedulerPage':\n              return <IndexSchedulerPage />\n            default:\n              break;\n          }\n        })()}\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}